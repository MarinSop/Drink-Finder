// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using drink_finder_restapi.Persistence.Contexts;

#nullable disable

namespace drink_finder_restapi.Migrations
{
    [DbContext(typeof(DFDbContext))]
    partial class DFDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("drink_finder_restapi.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<double>("Volume")
                        .HasColumnType("double");

                    b.Property<int>("drinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("drinkCategoryId");

                    b.ToTable("drinks");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.DrinkCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("drinkCategories");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.Establishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("cityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cityId");

                    b.ToTable("establishments");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.EstablishmentDrink", b =>
                {
                    b.Property<int>("EstablishemntId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("DrinkId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.HasKey("EstablishemntId", "DrinkId");

                    b.HasIndex("DrinkId");

                    b.ToTable("establishmentDrinks");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.Drink", b =>
                {
                    b.HasOne("drink_finder_restapi.Entities.DrinkCategory", "drinkCategory")
                        .WithMany("drinks")
                        .HasForeignKey("drinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("drinkCategory");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.Establishment", b =>
                {
                    b.HasOne("drink_finder_restapi.Entities.City", "city")
                        .WithMany()
                        .HasForeignKey("cityId");

                    b.Navigation("city");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.EstablishmentDrink", b =>
                {
                    b.HasOne("drink_finder_restapi.Entities.Drink", "drink")
                        .WithMany("establishemntDrinks")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("drink_finder_restapi.Entities.Establishment", "establishment")
                        .WithMany("establishemntDrinks")
                        .HasForeignKey("EstablishemntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("drink");

                    b.Navigation("establishment");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.Drink", b =>
                {
                    b.Navigation("establishemntDrinks");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.DrinkCategory", b =>
                {
                    b.Navigation("drinks");
                });

            modelBuilder.Entity("drink_finder_restapi.Entities.Establishment", b =>
                {
                    b.Navigation("establishemntDrinks");
                });
#pragma warning restore 612, 618
        }
    }
}
